package com.wewe.restaurant.service;

import com.wewe.restaurant.model.Menu;
import com.wewe.restaurant.model.Restaurant;
import com.wewe.restaurant.repository.MenuRepository;
import com.wewe.restaurant.repository.RestaurantRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;

@Service
public class MenuService {

    @Autowired
    private MenuRepository menuRepository;

    @Autowired
    private RestaurantRepository restaurantRepository;

    @Autowired
    public MenuService(RestaurantRepository restaurantRepository, MenuRepository menuRepository) {
        this.restaurantRepository = restaurantRepository;
        this.menuRepository = menuRepository;
    }

    // üìå ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    public List<Menu> getAllMenus() {
        return menuRepository.findAll();
    }

    // üìå ‡∏î‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏≤‡∏° ID
    public Optional<Menu> getMenuById(Long id) {
        return menuRepository.findById(id);
    }

    // üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà
    public Menu createMenu(Long restaurantId, Menu menu) {
        // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏à‡∏≤‡∏Å restaurantId ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤
        Restaurant restaurant = restaurantRepository.findById(restaurantId)
                .orElseThrow(() -> new RuntimeException("Restaurant not found with id: " + restaurantId));

        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π
        menu.setRestaurant(restaurant);

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà
        return menuRepository.save(menu);
    }

    // üìå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏ô‡∏π
    public Menu updateMenu(Long id, Menu updatedMenu) {
        return menuRepository.findById(id).map(menu -> {
            menu.setName(updatedMenu.getName());
            return menuRepository.save(menu);
        }).orElseThrow(() -> new RuntimeException("Menu not found"));
    }

    // üìå ‡∏•‡∏ö‡πÄ‡∏°‡∏ô‡∏π
    public void deleteMenu(Long id) {
        if (!menuRepository.existsById(id)) {
            throw new RuntimeException("Menu not found");
        }
        menuRepository.deleteById(id);
    }

}

