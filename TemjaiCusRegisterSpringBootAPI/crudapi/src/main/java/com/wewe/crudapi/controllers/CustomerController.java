package com.wewe.crudapi.controllers;

import com.wewe.crudapi.entity.Customer;
import com.wewe.crudapi.entity.User;
import com.wewe.crudapi.repository.CustomerRepository;
import com.wewe.crudapi.services.CustomerService;
import com.wewe.crudapi.services.EmailService;
import com.wewe.crudapi.services.LineNotifyService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/customer")
@CrossOrigin(origins = "*") // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ Frontend ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ API
public class CustomerController {

    private CustomerService customerService;

    @Autowired
    public CustomerController(CustomerService customerService) {
        this.customerService = customerService;
    }

    @Autowired
    private CustomerRepository customerRepository;

    @Autowired
    private EmailService emailService;

    @Autowired
    private LineNotifyService lineNotifyService;

    @GetMapping("/customers")
    public List<Customer> getAllCustomer() {
        return customerRepository.findAll();
    }

//    @GetMapping("/customers/{id}")
//    public Customer getId(@PathVariable int id){
//        User myCustomer = customerRepository.findById(id);
//        if(myCustomer == null) {
//            throw new RuntimeException("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ " + id);
//        }
//        return myCustomer;
//    }

    @PostMapping("/register")
    public String registerCustomer(@RequestBody Customer customer) {
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        customerRepository.save(customer);

        // ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        String subject = "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏ã‡∏•‡πà‡∏≤‡πÄ‡∏ã‡∏•‡∏•‡πå";
        String body = "<h3>‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì " + customer.getName() + " ‡∏ó‡∏µ‡πà‡∏™‡∏ô‡πÉ‡∏à‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏ã‡∏•‡πà‡∏≤‡πÄ‡∏ã‡∏•‡∏•‡πå!</h3>" +
                "<p>‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î</p>";

        emailService.sendEmail(customer.getEmail(), subject, body);

//        // ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô LINE Notify
//        String lineMessage = "üîî ‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏ã‡∏•‡πà‡∏≤‡πÄ‡∏ã‡∏•‡∏•‡πå!\n" +
//                "üë§ ‡∏ä‡∏∑‡πà‡∏≠: " + customer.getName() + "\n" +
//                "üìß ‡∏≠‡∏µ‡πÄ‡∏°‡∏•: " + customer.getEmail() + "\n" +
//                "üìû ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: " + customer.getPhone() + "\n" +
//                "üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: " + customer.getAddress();
//        lineNotifyService.sendLineNotify(lineMessage);

        return "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å, ‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞ LINE ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß";
    }


}

