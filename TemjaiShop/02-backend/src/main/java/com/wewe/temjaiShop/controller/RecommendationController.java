package com.wewe.temjaiShop.controller;

import com.wewe.temjaiShop.model.Product;
import com.wewe.temjaiShop.repository.UserRepository;
import com.wewe.temjaiShop.service.ProductService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;

import java.security.Principal;
import java.util.List;

@Controller
public class RecommendationController {

    private final ProductService productService;

    private final UserRepository userRepository;

    public RecommendationController(ProductService productService, UserRepository userRepository) {
        this.productService = productService;
        this.userRepository = userRepository;
    }


    // ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á /recommendations
    @GetMapping("/recommendations")
    public String showRecommendations(Model model, Principal principal) {
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Principal ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö OAuth2 ‡∏´‡∏£‡∏∑‡∏≠ Local
        String username = "‡∏ú‡∏π‡πâ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°‡∏ä‡∏°";

        if (principal instanceof Authentication) {
            Authentication authentication = (Authentication) principal;

            Object principalObj = authentication.getPrincipal();

            if (principalObj instanceof UserDetails userDetails) {
                // üîê Local User
                username = userDetails.getUsername();
            } else if (principalObj instanceof OAuth2User oauth2User) {
                // üåê Facebook/Google OAuth2 User
                username = oauth2User.getAttribute("name"); // ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ "email" ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
            }
        }

        // ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ username ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏• (‡∏™‡∏°‡∏°‡∏∏‡∏ï‡∏¥)
        List<Product> recommendedProducts = productService.getRecommendationsForUser(username);

        model.addAttribute("recommendedProducts", recommendedProducts);
        model.addAttribute("username", username);

        return "recommendations"; // ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ HTML ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
    }
}

