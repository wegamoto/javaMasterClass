package com.wewe.springlance.controller;

import com.wewe.springlance.model.ProjectRequest;
import com.wewe.springlance.model.User;
import com.wewe.springlance.repository.ProjectRequestRepository;
import com.wewe.springlance.service.ProjectRequestService;
import com.wewe.springlance.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.security.Principal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

@Controller
@RequestMapping("/projects")
public class ProjectRequestController {

    @Autowired
    private ProjectRequestService projectRequestService;

    @Autowired
    private ProjectRequestRepository projectRequestRepository;

    @Autowired
    private UserService userService;

    // üìÑ 1. ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    @GetMapping
    public String listProjects(Model model) {
        model.addAttribute("projects", projectRequestRepository.findAllByOrderByCreatedAtDesc());
        return "project/list";
    }


    // üë§ 2. ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    @GetMapping("/my")
    public String myProjects(Model model, Principal principal) {
        String email = principal.getName();
        Optional<User> user = userService.findByEmail(email);
        List<ProjectRequest> myProjects = projectRequestService.findByClient(user);
        model.addAttribute("myProjects", myProjects);
        return "project/my";
    }

    // üÜï 3. ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà
    @GetMapping("/create")
    public String showCreateForm(Model model) {
        model.addAttribute("projectRequest", new ProjectRequest());
        return "project/create-project";
    }

    // üíæ 4. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà
    @PostMapping
    public String saveProject(@ModelAttribute ProjectRequest projectRequest, Principal principal) {
        String email = principal.getName();
        Optional<User> user = userService.findByEmail(email);
        user.ifPresent(projectRequest::setClient); // ‡∏ï‡∏±‡πâ‡∏á client ‡∏à‡∏≤‡∏Å user ‡∏ó‡∏µ‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
        projectRequest.setStatus("REQUESTED");
        projectRequest.setCreatedAt(LocalDateTime.now());
        projectRequestService.save(projectRequest);
        return "redirect:/projects/my";
    }

    // üîç 5. ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ï‡∏≤‡∏° id
    @GetMapping("/{id}")
    public String viewProject(@PathVariable Long id, Model model) {
        projectRequestService.findById(id).ifPresent(project ->
                model.addAttribute("project", project)
        );
        return "project/view";
    }
}
